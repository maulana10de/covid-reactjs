{"version":3,"sources":["assets/img/img-banner-1.jpg","assets/img/img-banner-2.jpg","assets/img/img-banner-3.jpg","components/Footer.js","components/Navbar.js","support/list_url.js","pages/countriesDetails.js","components/CardCountry.js","components/Pagination.js","pages/countrypage.js","components/CardInfoIndonesia.js","components/CardInfoWorld.js","components/Carousel.js","components/Jumbotron.js","pages/Homepage.js","pages/not404.js","components/CardProvinsi.js","pages/provincepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","style","height","width","backgroundColor","to","NavbarComp","props","btCollapse","setState","collapsed","state","Navbar","color","light","expand","marginBottom","NavbarBrand","NavbarToggler","onClick","this","Collapse","isOpen","navbar","Nav","NavItem","Component","API_URL","API_URL_IDN","CountriesDetail","getDetail","params","match","Axios","get","iso","then","res","console","log","data","confirmed","recovered","deaths","getAllDetail","detail","value","catch","err","url","allData","renderData","map","item","idx","key","combinedKey","active","countries","toLocaleString","React","CardCountry","name","iso3","textDecoration","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","i","Math","ceil","push","class","href","aria-label","aria-hidden","number","cursor","Country","getDataCountry","dataCountry","renderCard","indexOfLastItem","currentPage","indexOfFirstItems","slice","loading","caseCountries","length","pageNumber","IndoInfo","getDataIndo","dataIndo","meninggal","jumlahKasus","perawatan","sembuh","WorldInfo","getData","dataWorld","CarouselComp","renderCarousel","info","src","alt","banner1","banner2","banner3","id","carousel","role","data-slide","arial-hidden","Jumbo","Jumbotron","Button","Home","Carousel","NotFound","CardProvince","provinsi","kasusPosi","kasusSemb","kasusMeni","Province","getDataProvinsi","dataProvince","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7982cfce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img-banner-1.24ac07fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img-banner-2.d2959e43.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img-banner-3.1de4eb55.jpg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Footer() {\n  return (\n    <div className='row'>\n      <nav\n        className='navbar navbar-light bg-light justify-content-end'\n        style={{ height: '7vh', width: '100%', backgroundColor: '#d0d4d8' }}\n      >\n        <Link to='/'>copyright @Ade Maulana</Link>\n      </nav>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n} from 'reactstrap';\n\nclass NavbarComp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n    };\n  }\n\n  btCollapse = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Navbar\n          color='faded'\n          light\n          expand='md'\n          style={{ backgroundColor: '#d0d4d8', marginBottom: '20px' }}\n        >\n          <NavbarBrand className='mr--auto'>Covid App</NavbarBrand>\n          <NavbarToggler\n            className='mr-2'\n            onClick={this.btCollapse}\n          ></NavbarToggler>\n          <Collapse isOpen={this.state.collapsed} navbar>\n            <Nav>\n              <NavItem>\n                <Link to='/' className='nav-link'>\n                  Home\n                </Link>\n              </NavItem>\n              <NavItem>\n                <Link to='/country' className='nav-link'>\n                  Country\n                </Link>\n              </NavItem>\n              <NavItem>\n                <Link to='/province' className='nav-link'>\n                  Province\n                </Link>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default NavbarComp;\n","export const API_URL = 'https://covid19.mathdro.id';\nexport const API_URL_IDN = 'https://indonesia-covid-19-api.now.sh';\n","import React from 'react';\nimport Axios from 'axios';\nimport { API_URL } from '../support/list_url';\n\n// const API_URL = 'https://covid19.mathdro.id';\nclass CountriesDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      detail: {\n        confirmed: 0,\n        recovered: 0,\n        deaths: 0,\n      },\n      allData: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getDetail();\n  }\n\n  getDetail = () => {\n    let { params } = this.props.match;\n    Axios.get(API_URL + `/api/countries/${params.iso}`)\n      .then((res) => {\n        console.log('get detail:', res.data);\n        let { confirmed, recovered, deaths } = res.data;\n        this.getAllDetail(confirmed.detail);\n        this.setState({\n          detail: {\n            confirmed: confirmed.value,\n            recovered: recovered.value,\n            deaths: deaths.value,\n          },\n        });\n      })\n      .catch((err) => {\n        console.log('error:', err);\n      });\n  };\n\n  getAllDetail = (url) => {\n    Axios.get(url)\n      .then((res) => {\n        console.log('get all detail:', res.data);\n        this.setState({ allData: res.data });\n      })\n      .catch((err) => {\n        console.log('error', err);\n      });\n  };\n\n  renderData = () => {\n    return this.state.allData.map((item, idx) => {\n      return (\n        <tr key={idx}>\n          <th>{idx + 1}</th>\n          <td>{item.combinedKey}</td>\n          <td>{item.confirmed}</td>\n          <td>{item.recovered}</td>\n          <td>{item.deaths}</td>\n          <td>{item.active}</td>\n        </tr>\n      );\n    });\n  };\n\n  render() {\n    let { params } = this.props.match;\n    return (\n      <div className='container'>\n        <div className='card text-center'>\n          <h5 className='card-header'>{params.countries}</h5>\n          <div className='card-body'>\n            <div className='row'>\n              <div className='col-12 col-md-4 mb-2'>\n                <div className='card text-center bg-info text-white'>\n                  <div className='card-body'>\n                    <h5 className='card-title'>Confirmed</h5>\n                    <h2>{this.state.detail.confirmed.toLocaleString()}</h2>\n                  </div>\n                </div>\n              </div>\n              <div className='col-12 col-md-4 mb-2'>\n                <div className='card text-center bg-success text-white'>\n                  <div className='card-body'>\n                    <h5 className='card-title'>Recovered</h5>\n                    <h2>{this.state.detail.recovered.toLocaleString()}</h2>\n                  </div>\n                </div>\n              </div>\n              <div className='col-12 col-md-4'>\n                <div className='card text-center bg-danger text-white'>\n                  <div className='card-body'>\n                    <h5 className='card-title'>Deaths</h5>\n                    <h2>{this.state.detail.deaths.toLocaleString()}</h2>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <table className='table table-hover my-2'>\n          <thead className='thead-dark'>\n            <tr>\n              <th>No</th>\n              <th>City</th>\n              <th>Confirmed</th>\n              <th>Recovered</th>\n              <th>Deaths</th>\n              <th>Active</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderData()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default CountriesDetail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CardCountry = (props) => {\n  return (\n    <div className='col-12 col-sm-4 mb-3'>\n      <Link\n        to={`/countries-detail/${props.data.name}/${props.data.iso3}`}\n        style={{ textDecoration: 'none' }}\n      >\n        <div className='card-header'>{props.data.name}</div>\n      </Link>\n    </div>\n  );\n};\n\nexport default CardCountry;\n","import React from 'react';\n\nexport const Pagination = ({ itemsPerPage, totalItems, paginate }) => {\n  console.log('item per page', itemsPerPage);\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div className='col-12'>\n      <nav className='d-flex flex-row align-self-center justify-content-end'>\n        <ul className='pagination'>\n          <li className='page-item'>\n            <a class='page-link' href='#' aria-label='Previous'>\n              <span aria-hidden='true'>&laquo;</span>\n              <span class='sr-only'>Previous</span>\n            </a>\n          </li>\n          {pageNumbers.map((number) => (\n            <li\n              key={number}\n              className='page-item'\n              style={{ cursor: 'pointer' }}\n            >\n              <a onClick={() => paginate(number)} className='page-link'>\n                {number}\n              </a>\n            </li>\n          ))}\n\n          <li class='page-item'>\n            <a class='page-link' href='#' aria-label='Next'>\n              <span aria-hidden='true'>&raquo;</span>\n              <span class='sr-only'>Next</span>\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n","import React from 'react';\nimport Axios from 'axios';\nimport CardCountry from '../components/CardCountry';\nimport { API_URL } from '../support/list_url';\nimport { Pagination } from '../components/Pagination';\n\nclass Country extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataCountry: [],\n      caseCountries: [],\n      loading: false,\n      currentPage: 1,\n      itemsPerPage: 42,\n    };\n  }\n\n  componentDidMount() {\n    this.getDataCountry();\n  }\n\n  getDataCountry = () => {\n    Axios.get(API_URL + `/api/countries`)\n      .then((res) => {\n        console.log('get data country:', res.data.countries);\n        this.setState({\n          dataCountry: res.data.countries,\n        });\n      })\n      .catch((err) => {\n        console.log('error:', err);\n      });\n  };\n\n  renderCard = () => {\n    const indexOfLastItem = this.state.currentPage * this.state.itemsPerPage;\n    const indexOfFirstItems = indexOfLastItem - this.state.itemsPerPage;\n    const currentItems = this.state.dataCountry.slice(\n      indexOfFirstItems,\n      indexOfLastItem\n    );\n\n    return currentItems.map((item, idx) => {\n      return <CardCountry data={item} idx={idx} loading={this.state.loading} />;\n    });\n  };\n\n  render() {\n    const paginate = (pageNumber) => this.setState({ currentPage: pageNumber });\n    return (\n      <div className='container'>\n        <div className='row'>\n          {this.renderCard()}\n          <Pagination\n            itemsPerPage={this.state.itemsPerPage}\n            totalItems={this.state.dataCountry.length}\n            paginate={paginate}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Country;\n","import React from 'react';\nimport Axios from 'axios';\nimport { API_URL_IDN } from '../support/list_url';\n\n// const API_URL_INA = 'https://indonesia-covid-19-api.now.sh';\nclass IndoInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataIndo: {},\n    };\n  }\n\n  componentDidMount() {\n    this.getDataIndo();\n  }\n\n  getDataIndo = () => {\n    Axios.get(API_URL_IDN + `/api`)\n      .then((res) => {\n        console.log('indo', res);\n        this.setState({ dataIndo: res.data });\n      })\n      .catch((err) => {\n        console.log(`Error:`, err);\n      });\n  };\n\n  render() {\n    let { dataIndo } = this.state;\n    return (\n      <div>\n        <h2 className='text-center'>Covid-19 Indonesia Summary</h2>\n        <hr />\n        <div className='row text-center'>\n          <div className='col-12 col-md-3'>\n            <div className='card bg-warning'>\n              <div className='card-body'>\n                <h5 className='card-title'>Confirmed</h5>\n                {dataIndo.meninggal ? (\n                  <h2>{dataIndo.jumlahKasus.toLocaleString()}</h2>\n                ) : (\n                  <h3>Waiting</h3>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className='col-12 col-md-3'>\n            <div className='card bg-secondary'>\n              <div className='card-body'>\n                <h5 className='card-title'>Treatment</h5>\n                {dataIndo.perawatan ? (\n                  <h2>{dataIndo.perawatan.toLocaleString()}</h2>\n                ) : (\n                  <h3>Waiting</h3>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className='col-12 col-md-3'>\n            <div className='card bg-success'>\n              <div className='card-body'>\n                <h5 className='card-title'>Recovered</h5>\n                {dataIndo.sembuh ? (\n                  <h2>{dataIndo.sembuh.toLocaleString()}</h2>\n                ) : (\n                  <h3>Waiting</h3>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className='col-12 col-md-3'>\n            <div className='card bg-danger'>\n              <div className='card-body'>\n                <h5 className='card-title'>Deaths</h5>\n                {dataIndo.meninggal ? (\n                  <h2>{dataIndo.meninggal.toLocaleString()}</h2>\n                ) : (\n                  <h3>Waiting</h3>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IndoInfo;\n","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nconst API_URL = 'https://covid19.mathdro.id';\nclass WorldInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataWorld: {},\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    Axios.get(API_URL + `/api`)\n      .then((res) => {\n        console.log(res);\n        this.setState({ dataWorld: res.data });\n      })\n      .catch((err) => {\n        console.log(`Error:`, err);\n      });\n  };\n\n  render() {\n    let { dataWorld } = this.state;\n    return (\n      <div>\n        <h2 className='text-center'>Covid-19 World Summary</h2>\n        <hr />\n        <div className='row text-center'>\n          <div className='col-12 col-md-4'>\n            <div className='card bg-warning'>\n              <div className='card-body'>\n                <h5 className='card-title'>Confirmed</h5>\n                {dataWorld.confirmed ? (\n                  <h2>{dataWorld.confirmed.value.toLocaleString()}</h2>\n                ) : (\n                  <h3>Waiting</h3>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className='col-12 col-md-4'>\n            <div className='card bg-success'>\n              <div className='card-body'>\n                <h5 className='card-title'>Recovered</h5>\n                {dataWorld.recovered ? (\n                  <h2>{dataWorld.recovered.value.toLocaleString()}</h2>\n                ) : (\n                  <h3>Waiting</h3>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className='col-12 col-md-4'>\n            <div className='card bg-danger'>\n              <div className='card-body'>\n                <h5 className='card-title'>Deaths</h5>\n                {dataWorld.deaths ? (\n                  <h2>{dataWorld.deaths.value.toLocaleString()}</h2>\n                ) : (\n                  <h3>Waiting</h3>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WorldInfo;\n","import React from 'react';\nimport banner1 from '../assets/img/img-banner-1.jpg';\nimport banner2 from '../assets/img/img-banner-2.jpg';\nimport banner3 from '../assets/img/img-banner-3.jpg';\n\nclass CarouselComp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      info: [banner1, banner2, banner3],\n    };\n  }\n  renderCarousel = () => {\n    return this.state.info.map((item, idx) => {\n      console.log(item);\n      if (idx === 0) {\n        return (\n          <div className='carousel-item active' key={idx}>\n            <img\n              className='d-block w-100'\n              style={{ height: 443 }}\n              src={item}\n              alt={`slide${idx + 1}`}\n            />\n          </div>\n        );\n      }\n      return (\n        <div className='carousel-item' key={idx}>\n          <img\n            className='d-block w-100'\n            style={{ height: 443 }}\n            src={item}\n            alt={`slide${idx + 1}`}\n          />\n        </div>\n      );\n    });\n  };\n  render() {\n    return (\n      <div id='carouselInfo' className='carousel slide data-ride=' carousel>\n        <div className='carousel-inner'>{this.renderCarousel()}</div>\n        <a\n          className='carousel-control-prev'\n          href='#carouselInfo'\n          role='button'\n          data-slide='prev'\n        >\n          <span\n            className='carousel-control-prev-icon'\n            arial-hidden='true'\n          ></span>\n          <span className='sr-only'>Previous</span>\n        </a>\n        <a\n          className='carousel-control-next'\n          href='#carouselInfo'\n          role='button'\n          data-slide='next'\n        >\n          <span\n            className='carousel-control-next-icon'\n            arial-hidden='true'\n          ></span>\n          <span className='sr-only'>Next</span>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default CarouselComp;\n","import React from 'react';\nimport { Button, Jumbotron } from 'reactstrap';\n\nconst Jumbo = (props) => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Covid Info</h1>\n        <p className='lead'>\n          Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n        </p>\n        <hr className='my-2'></hr>\n        <p>\n          Lorem ipsum dolor sit amet consectetur, adipisicing elit. Blanditiis,\n          dignissimos omnis? Optio repudiandae quasi at, praesentium molestiae\n          doloribus, voluptatem quod deleniti laudantium labore odit doloremque\n          ab deserunt quidem natus! Possimus! Ea voluptas voluptatibus, quaerat\n          ipsum assumenda accusamus ab ex nobis.\n        </p>\n        <Button color='primary'>Get Info</Button>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Jumbo;\n","import React from 'react';\nimport IndoInfo from '../components/CardInfoIndonesia';\nimport WorldInfo from '../components/CardInfoWorld';\nimport CarouselComp from '../components/Carousel';\nimport Jumbo from '../components/Jumbotron';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div>\n        <div className='row'>\n          <div className='col-12 col-md-6'>\n            <CarouselComp />\n          </div>\n          <div className='col-12 col-md-6'>\n            <Jumbo />\n          </div>\n        </div>\n        <WorldInfo />\n        <hr />\n        <IndoInfo />\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport '../assets/css/style.css';\n\nclass NotFound extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div id='notfound'>\n        <div className='notfound'>\n          <div className='notfound-404'>\n            <h3>Oops! Page not found</h3>\n            <h1>\n              <span>4</span>\n              <span>0</span>\n              <span>4</span>\n            </h1>\n          </div>\n          <h2>we are sorry, but the page you requested was not found</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\n\nconst CardProvince = (props) => {\n  return (\n    <div className='col-12 col-sm-4 mb-3'>\n      <div className='card' key={props.idx}>\n        <div className='card-header'>{props.data.provinsi}</div>\n        <ul className='list-group list-group-flush'>\n          <li className='list-group-item'>\n            Positif : {props.data.kasusPosi.toLocaleString()}\n          </li>\n          <li className='list-group-item'>\n            Sembuh : {props.data.kasusSemb.toLocaleString()}\n          </li>\n          <li className='list-group-item'>\n            Meninggal : {props.data.kasusMeni.toLocaleString()}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default CardProvince;\n","import React from 'react';\nimport Axios from 'axios';\nimport CardProvince from '../components/CardProvinsi';\nimport { API_URL_IDN } from '../support/list_url';\n\n// const API_URL_PROV = 'https://indonesia-covid-19-api.now.sh';\nclass Province extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataProvince: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getDataProvinsi();\n  }\n\n  getDataProvinsi = () => {\n    Axios.get(API_URL_IDN + `/api/provinsi`)\n      .then((res) => {\n        console.log('get data provinsi:', res.data);\n        this.setState({\n          dataProvince: res.data.data,\n        });\n      })\n      .catch((err) => {\n        console.log('error:', err);\n      });\n  };\n\n  renderCard = () => {\n    return this.state.dataProvince.map((item, idx) => {\n      return <CardProvince data={item} idx={idx} />;\n    });\n  };\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='row'>{this.renderCard()}</div>\n      </div>\n    );\n  }\n}\n\nexport default Province;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Footer from './components/Footer';\nimport Navbar from './components/Navbar';\nimport CountriesDetail from './pages/countriesDetails';\nimport Country from './pages/countrypage';\nimport Home from './pages/Homepage';\nimport NotFound from './pages/not404';\nimport Province from './pages/provincepage';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className='container mt-2'>\n        <Navbar />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/province' component={Province} />\n          <Route path='/country' component={Country} />\n          <Route\n            path='/countries-detail/:countries/:iso'\n            component={CountriesDetail}\n          />\n          <Route path='*' component={NotFound} />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}